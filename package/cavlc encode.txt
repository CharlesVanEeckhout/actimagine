level = [0, 123, -34, 79, -2, 0, -1, 0, 0, 1, 5, -1, 1, 0, 0, 0]
ff_h264_cavlc_suffix_limit = [
    0, 3, 6, 12, 24, 48, 0x8000
]

for i in range(len(level)-1, -1, -1):
    if level[i] == 0:
        level.pop(i)
    else:
        break

if len(level) == 0:
    exit()

print(level)

run_before_zeros = []
run_before_current_zero = 0
total_zeros = 0
for i in range(len(level)-2, -1, -1):
    if level[i] == 0:
        run_before_current_zero += 1
        total_zeros += 1
        level.pop(i)
    else:
        run_before_zeros.append(run_before_current_zero)
        run_before_current_zero = 0

print("run_before_zeros: " + str(run_before_zeros))
print("total_zeros: " + str(total_zeros))
print(level)

total_coeff = len(level)
trailing_ones_signbit = []
for i in range(len(level)-1, -1, -1):
    if abs(level[i]) == 1:
        # signbit of 1 is 0 and signbit of -1 is 1
        trailing_ones_signbit.append(1 if level[i] < 0 else 0)
        
        level.pop(i)
        if len(trailing_ones_signbit) == 3:
            break
    else:
        break
trailing_ones = len(trailing_ones_signbit)
print("trailing_ones: " + str(trailing_ones))
print(level)

# number is not a trailing one
suffix_length = 0
level_code_signbit = []
level_prefixes = []
level_suffixes = []
for i in range(len(level)-1, -1, -1):
    level_code = level[i]
    level_code_signbit.append(1 if level[i] < 0 else 0)
    level[i] = abs(level[i]) - 1
    level_prefix = min(level[i] >> suffix_length, 15)
    level_suffix = level[i] - (level_prefix << suffix_length)
    if level_prefix == 15 and level_suffix >= (1 << 11):
        raise Exception("level_suffix too large")
    elif level_prefix < 15 and level_suffix >= (1 << suffix_length):
        raise Exception("level_suffix too large")
    level_prefixes.append(level_prefix)
    level_suffixes.append(level_suffix)

    suffix_length += 1 if level_code > ff_h264_cavlc_suffix_limit[suffix_length + 1] else 0
    
    level.pop(i)

print("level_code_signbit: " + str(level_code_signbit))
print("level_prefixes:     " + str(level_prefixes))
print("level_suffixes:     " + str(level_suffixes))
